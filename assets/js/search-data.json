{
  
    
        "post0": {
            "title": "Pope On Demand",
            "content": "Noor Grewal . DaFoe . APEL . 19 January 2022 . Pope On-Demand . Making mistakes is a fundamental part of the human experience. Everybody has made a mistake, whether consequential or insignificant, at some point in their life. Thus, making mistakes is easy, but forgiving those mistakes often is not. Alexander Pope, in his long poem An Essay on Criticism, wrote that making mistakes is human, however forgiving those mistakes is “divine.” Forgiveness does not usually come easy, and is seen by Pope as something holy, something that should not be taken for granted, because it is a second chance. This can be a shot at redemption for the errors that every person makes, but it can also result in horrible consequences when gifted to the wrong person. While I agree with Pope that the divinity of forgiveness for human mistakes can lead to progression when those people who have erred want to contribute to society, some people who make mistakes are beyond saving, and giving them a second chance can have ruinous consequences. . Primarily, second chances can allow people who have a purpose to help society to redeem themselves after making mistakes, and continue to serve society in a beneficial way. Many popular musicians and influencers have been subject to the phenomenon of “cancel culture,” in which their past or present mistakes are exposed to the media world, and their content is essentially boycotted. Examples include artists such as Billie Eilish, Doja Cat, and Lil Nas X, all of whom have been put in the spotlight on social media platforms for harmful or insensitive tweets. These people have made human mistakes like misreading situations or bringing down other people via the internet in their youth, and were given a second chance due to the reach of the music that they make. People are polarized on these issues, therefore some granted the artists the second chance to continue making their music, and all have progressed since then. Billie Eilish has millions of streamers who are touched by her emotional content, and able to relate to her, despite the fact that she has offended people in the past. She was given a second chance. Doja Cat is celebrated for her stage presence and empowering music, despite the fact that she has tweeted slurs in the past. She was given a second chance. Lil Nas X is one of the most popular rappers at the moment, and brings awareness to LGBT rights, despite the fact that he has attacked people online in the past. He was given a second chance. All of these artists made mistakes, were forgiven, and now serve society in positive ways today. Additionally, second chances can serve society by bringing closure to the families of victims of previously unsolved crimes. In many cold cases from before forensic technologies, the Los Angeles Police Department was prone to making mistakes in identifying the victims and perpetrators of vicious murders, taking days to find enough evidence to compile a case. Those days soon became weeks, which became months, which became years, which led to boxes and boxes of cold cases, or unsolved murders. However, when forensic technology was invented, the LAPD was given a second chance at the cases that had physical evidence, and cold cases from decades ago are still being solved today. This is an example of an entire section of our society, the police department, that was given a second chance through science, and which is thus able to serve society better, making less of the mistakes it did in the past. Even influential historical figures such as presidents have made terrible mistakes. George Washington, the first president of the United States, led his troops into a massacre when he gained commanding status. Despite this tragic mistake, he was given a second chance in the American Revolution, and was able to help the country gain independence from British tyranny. This was beneficial because even though his mistake cost lives, Washington the fact that he had made one, and that he was not a deliberate murderer. He had the goal to liberate his country from oppression, and to benefit society, so when he was forgiven, he carried out that original goal without making the same mistake. Second chances, when given to people who want to help society progress, can be extremely beneficial, because these people have the mindset to create positive change. . However, some people do not acknowledge the mistakes that they have made, and should not deserve a second chance because they will simply make those mistakes again. There are thousands of plots of books, movies, and television shows where the hero gives the villain a second chance, only to be double-crossed or to see them make the same “mistake.” A prominent example is in the Marvel show Daredevil, where the main character is a lawyer named Matt Murdock by day, and a crime-fighting vigilante named “Daredevil” by night. His main enemy is Wilson Fisk, a man who controls almost all of New York through corruption and terror. Fisk goes against Murdock in the law world and the crime world, and makes the mistakes of killing people close to him. When Murdock finally is able to get the upper hand on Fisk, he spares him instead of killing him, offering him forgiveness and a second chance at living a more honest life. Murdock, like Pope, acknowledges that humans make mistakes and that forgiveness is divine. The problem, however, is that Fisk is an example of a person who believes that his mistakes are acceptable actions, and who does not view murder and corruption as bad if it is benefitting him. As a result, Murdock’s forgiveness enables Fisk to escape prison and continue to corrupt and kill innocent people. When somebody does not wish to benefit society, their mistakes are often unforgivable, as giving them a second chance will only let them make more of these mistakes. Hypothetically, if a rapist was caught, tried, and arrested for their crime, they might serve their time, be on parole, and eventually be offered a second chance at living a morally better life and preventing their mistakes from happening again. If they realized the gravity of their actions and how they were harmful, giving them a second chance could be beneficial, as they may want to prevent others from doing what they did, bettering society. On the other hand, in a situation such as the tragic San Diego murders of Amber Dubois and Chelsea King, if the perpetrator does not believe that their actions are wrong, a second chance is just ruinous. Amber Dubois and Chelsea King were subject to the horrible actions of the same man, and he stated on record (after he was finally caught) that he would have simply kept committing atrocities if he was released from prison. He was an example of someone who should not be granted a second chance, as he sought to hurt society and innocent people, not to better it. When a person has a destructive motive or purpose in life, a second chance will allow them to continue fulfilling that purpose and making the same mistakes. . Forgiveness in the form of a second chance is therefore worth granting when the person who has erred is aware of their mistakes, and wants to redeem themselves by helping society progress positively. It is not worth granting to those who have ignoble motives and who do not treat their mistakes as such, because the historical outcome is that they continue to make them, hurting society and its people. While making mistakes is human, forgiving somebody is divine, and forgiveness should thus be granted in the correct situations and treated as something holy. .",
            "url": "https://nope1013.github.io/firstrepo/2022/08/24/Pope-On-Demand.html",
            "relUrl": "/2022/08/24/Pope-On-Demand.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Noor's Current Favorite Songs",
            "content": "Noor’s Current Favorite Songs . . Not ranked in any specific order | Not in any specific category | Constantly subject to change, as music is… | . . “Comedown” by Bush | “Everlong” by the Foo Fighters | “Tear” by the Smashing Pumpkins | “Twilight” by bôa | “Wasting Love” by Iron Maiden | “Me and Your Mama” by Childish Gambino | “Short Change Hero” by the Heavy | “It’s My Life” by No Doubt | “Hail, Hail” by Pearl Jam | “Time is Running Out” by Muse |",
            "url": "https://nope1013.github.io/firstrepo/songs/2022/08/22/CURRENT-FAV-SONGS.html",
            "relUrl": "/songs/2022/08/22/CURRENT-FAV-SONGS.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "OGNotebook",
            "content": "print(&#39;Hello Mr M!&#39;) . Hello Mr M! .",
            "url": "https://nope1013.github.io/firstrepo/2022/08/22/new-nb.html",
            "relUrl": "/2022/08/22/new-nb.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://nope1013.github.io/firstrepo/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Noor Grewal is a senior at Del Norte who loves art, baking, and recently, coding! She hopes to learn more about fastpages 1. 😎 . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://nope1013.github.io/firstrepo/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "My Gallery",
          "content": "Here are some of my recent art projects! To view more, check out my instagram 🎨🖌️ . . .",
          "url": "https://nope1013.github.io/firstrepo/gallery/",
          "relUrl": "/gallery/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://nope1013.github.io/firstrepo/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}